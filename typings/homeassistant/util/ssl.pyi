"""
This type stub file was generated by pyright.
"""

import ssl
from enum import StrEnum
from functools import cache

"""Helper to create SSL contexts."""
class SSLCipherList(StrEnum):
    """SSL cipher lists."""
    PYTHON_DEFAULT = ...
    INTERMEDIATE = ...
    MODERN = ...


SSL_CIPHER_LISTS = ...
@cache
def create_no_verify_ssl_context(ssl_cipher_list: SSLCipherList = ...) -> ssl.SSLContext:
    """Return an SSL context that does not verify the server certificate.

    This is a copy of aiohttp's create_default_context() function, with the
    ssl verify turned off.

    https://github.com/aio-libs/aiohttp/blob/33953f110e97eecc707e1402daa8d543f38a189b/aiohttp/connector.py#L911
    """
    ...

@cache
def client_context(ssl_cipher_list: SSLCipherList = ...) -> ssl.SSLContext:
    """Return an SSL context for making requests."""
    ...

_DEFAULT_SSL_CONTEXT = ...
_DEFAULT_NO_VERIFY_SSL_CONTEXT = ...
def get_default_context() -> ssl.SSLContext:
    """Return the default SSL context."""
    ...

def get_default_no_verify_context() -> ssl.SSLContext:
    """Return the default SSL context that does not verify the server certificate."""
    ...

def server_context_modern() -> ssl.SSLContext:
    """Return an SSL context following the Mozilla recommendations.

    TLS configuration follows the best-practice guidelines specified here:
    https://wiki.mozilla.org/Security/Server_Side_TLS
    Modern guidelines are followed.
    """
    ...

def server_context_intermediate() -> ssl.SSLContext:
    """Return an SSL context following the Mozilla recommendations.

    TLS configuration follows the best-practice guidelines specified here:
    https://wiki.mozilla.org/Security/Server_Side_TLS
    Intermediate guidelines are followed.
    """
    ...

