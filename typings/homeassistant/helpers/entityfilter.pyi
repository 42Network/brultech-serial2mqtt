"""
This type stub file was generated by pyright.
"""

from collections.abc import Callable

"""Helper class to implement include/exclude of entities and domains."""
CONF_INCLUDE_DOMAINS = ...
CONF_INCLUDE_ENTITY_GLOBS = ...
CONF_INCLUDE_ENTITIES = ...
CONF_EXCLUDE_DOMAINS = ...
CONF_EXCLUDE_ENTITY_GLOBS = ...
CONF_EXCLUDE_ENTITIES = ...
CONF_ENTITY_GLOBS = ...
class EntityFilter:
    """A entity filter."""
    def __init__(self, config: dict[str, list[str]]) -> None:
        """Init the filter."""
        ...
    
    def explicitly_included(self, entity_id: str) -> bool:
        """Check if an entity is explicitly included."""
        ...
    
    def explicitly_excluded(self, entity_id: str) -> bool:
        """Check if an entity is explicitly excluded."""
        ...
    
    def get_filter(self) -> Callable[[str], bool]:
        """Return the filter function."""
        ...
    
    def __call__(self, entity_id: str) -> bool:
        """Run the filter."""
        ...
    


def convert_filter(config: dict[str, list[str]]) -> EntityFilter:
    """Convert the filter schema into a filter."""
    ...

BASE_FILTER_SCHEMA = ...
FILTER_SCHEMA = ...
def convert_include_exclude_filter(config: dict[str, dict[str, list[str]]]) -> EntityFilter:
    """Convert the include exclude filter schema into a filter."""
    ...

INCLUDE_EXCLUDE_FILTER_SCHEMA_INNER = ...
INCLUDE_EXCLUDE_BASE_FILTER_SCHEMA = ...
INCLUDE_EXCLUDE_FILTER_SCHEMA = ...
def generate_filter(include_domains: list[str], include_entities: list[str], exclude_domains: list[str], exclude_entities: list[str], include_entity_globs: list[str] | None = ..., exclude_entity_globs: list[str] | None = ...) -> Callable[[str], bool]:
    """Return a function that will filter entities based on the args."""
    ...

