"""
This type stub file was generated by pyright.
"""

from collections.abc import Mapping
from dataclasses import dataclass
from enum import StrEnum
from typing import Any
from homeassistant.core import HomeAssistant, callback
from homeassistant.helpers.typing import ConfigType

"""Helpers for the logger integration."""
@callback
def async_get_domain_config(hass: HomeAssistant) -> LoggerDomainConfig:
    """Return the domain config."""
    ...

@callback
def set_default_log_level(hass: HomeAssistant, level: int) -> None:
    """Set the default log level for components."""
    ...

@callback
def set_log_levels(hass: HomeAssistant, logpoints: Mapping[str, int]) -> None:
    """Set the specified log levels."""
    ...

async def get_integration_loggers(hass: HomeAssistant, domain: str) -> set[str]:
    """Get loggers for an integration."""
    ...

@dataclass(slots=True)
class LoggerSetting:
    """Settings for a single module or integration."""
    level: str
    persistence: str
    type: str
    ...


@dataclass(slots=True)
class LoggerDomainConfig:
    """Logger domain config."""
    overrides: dict[str, Any]
    settings: LoggerSettings
    ...


class LogPersistance(StrEnum):
    """Log persistence."""
    NONE = ...
    ONCE = ...
    PERMANENT = ...


class LogSettingsType(StrEnum):
    """Log settings type."""
    INTEGRATION = ...
    MODULE = ...


class LoggerSettings:
    """Manage log settings."""
    _stored_config: dict[str, dict[str, LoggerSetting]]
    def __init__(self, hass: HomeAssistant, yaml_config: ConfigType) -> None:
        """Initialize log settings."""
        ...
    
    async def async_load(self) -> None:
        """Load stored settings."""
        ...
    
    @callback
    def async_save(self) -> None:
        """Save settings."""
        ...
    
    async def async_update(self, hass: HomeAssistant, domain: str, settings: LoggerSetting) -> None:
        """Update settings."""
        ...
    
    async def async_get_levels(self, hass: HomeAssistant) -> dict[str, int]:
        """Get combination of levels from yaml and storage."""
        ...
    


