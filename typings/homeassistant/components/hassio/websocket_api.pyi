"""
This type stub file was generated by pyright.
"""

import logging
import voluptuous as vol
import homeassistant.helpers.config_validation as cv
from numbers import Number
from typing import Any
from homeassistant.components import websocket_api
from homeassistant.components.websocket_api.connection import ActiveConnection
from homeassistant.core import HomeAssistant, callback
from .const import ATTR_DATA, ATTR_ENDPOINT, ATTR_METHOD, ATTR_TIMEOUT, WS_TYPE, WS_TYPE_API, WS_TYPE_EVENT, WS_TYPE_SUBSCRIBE

"""Websocekt API handlers for the hassio integration."""
SCHEMA_WEBSOCKET_EVENT = ...
WS_NO_ADMIN_ENDPOINTS = ...
_LOGGER: logging.Logger = ...
@callback
def async_load_websocket_api(hass: HomeAssistant): # -> None:
    """Set up the websocket API."""
    ...

@websocket_api.require_admin
@websocket_api.websocket_command({ vol.Required(WS_TYPE): WS_TYPE_SUBSCRIBE })
@websocket_api.async_response
async def websocket_subscribe(hass: HomeAssistant, connection: ActiveConnection, msg: dict[str, Any]): # -> None:
    """Subscribe to supervisor events."""
    ...

@websocket_api.websocket_command({ vol.Required(WS_TYPE): WS_TYPE_EVENT,vol.Required(ATTR_DATA): SCHEMA_WEBSOCKET_EVENT })
@websocket_api.async_response
async def websocket_supervisor_event(hass: HomeAssistant, connection: ActiveConnection, msg: dict[str, Any]): # -> None:
    """Publish events from the Supervisor."""
    ...

@websocket_api.websocket_command({ vol.Required(WS_TYPE): WS_TYPE_API,vol.Required(ATTR_ENDPOINT): cv.string,vol.Required(ATTR_METHOD): cv.string,vol.Optional(ATTR_DATA): dict,vol.Optional(ATTR_TIMEOUT): vol.Any(Number, None) })
@websocket_api.async_response
async def websocket_supervisor_api(hass: HomeAssistant, connection: ActiveConnection, msg: dict[str, Any]): # -> None:
    """Websocket handler to call Supervisor API."""
    ...

