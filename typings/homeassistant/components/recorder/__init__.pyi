"""
This type stub file was generated by pyright.
"""

import logging
import voluptuous as vol
import homeassistant.helpers.config_validation as cv
from __future__ import annotations
from typing import Any
from homeassistant.const import CONF_EXCLUDE, EVENT_RECORDER_5MIN_STATISTICS_GENERATED, EVENT_RECORDER_HOURLY_STATISTICS_GENERATED, EVENT_STATE_CHANGED
from homeassistant.core import HomeAssistant
from homeassistant.helpers.entityfilter import INCLUDE_EXCLUDE_BASE_FILTER_SCHEMA, INCLUDE_EXCLUDE_FILTER_SCHEMA_INNER, convert_include_exclude_filter
from homeassistant.helpers.integration_platform import async_process_integration_platforms
from homeassistant.helpers.typing import ConfigType
from homeassistant.loader import bind_hass
from . import entity_registry, websocket_api
from .const import CONF_DB_INTEGRITY_CHECK, DATA_INSTANCE, DOMAIN, INTEGRATION_PLATFORMS_LOAD_IN_RECORDER_THREAD, INTEGRATION_PLATFORM_COMPILE_STATISTICS, SQLITE_URL_PREFIX, SupportedDialect
from .core import Recorder
from .services import async_register_services
from .tasks import AddRecorderPlatformTask
from .util import get_instance

"""Support for recording details."""
_LOGGER = ...
DEFAULT_URL = ...
DEFAULT_DB_FILE = ...
DEFAULT_DB_INTEGRITY_CHECK = ...
DEFAULT_DB_MAX_RETRIES = ...
DEFAULT_DB_RETRY_WAIT = ...
DEFAULT_COMMIT_INTERVAL = ...
CONF_AUTO_PURGE = ...
CONF_AUTO_REPACK = ...
CONF_DB_URL = ...
CONF_DB_MAX_RETRIES = ...
CONF_DB_RETRY_WAIT = ...
CONF_PURGE_KEEP_DAYS = ...
CONF_PURGE_INTERVAL = ...
CONF_EVENT_TYPES = ...
CONF_COMMIT_INTERVAL = ...
EXCLUDE_SCHEMA = ...
FILTER_SCHEMA = ...
ALLOW_IN_MEMORY_DB = ...
def validate_db_url(db_url: str) -> Any:
    """Validate database URL."""
    ...

CONFIG_SCHEMA = ...
@bind_hass
def is_entity_recorded(hass: HomeAssistant, entity_id: str) -> bool:
    """Check if an entity is being recorded.

    Async friendly.
    """
    ...

async def async_setup(hass: HomeAssistant, config: ConfigType) -> bool:
    """Set up the recorder."""
    ...

