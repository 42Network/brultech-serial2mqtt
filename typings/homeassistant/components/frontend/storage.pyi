"""
This type stub file was generated by pyright.
"""

import voluptuous as vol
from collections.abc import Callable
from typing import Any
from homeassistant.components import websocket_api
from homeassistant.components.websocket_api.connection import ActiveConnection
from homeassistant.core import HomeAssistant
from homeassistant.helpers.storage import Store

"""API for persistent storage for the frontend."""
DATA_STORAGE = ...
STORAGE_VERSION_USER_DATA = ...
async def async_setup_frontend_storage(hass: HomeAssistant) -> None:
    """Set up frontend storage."""
    ...

async def async_user_store(hass: HomeAssistant, user_id: str) -> tuple[Store, dict[str, Any]]:
    """Access a user store."""
    ...

def with_store(orig_func: Callable) -> Callable:
    """Decorate function to provide data."""
    ...

@websocket_api.websocket_command({ vol.Required("type"): "frontend/set_user_data",vol.Required("key"): str,vol.Required("value"): vol.Any(bool, str, int, float, dict, list, None) })
@websocket_api.async_response
@with_store
async def websocket_set_user_data(hass: HomeAssistant, connection: ActiveConnection, msg: dict[str, Any], store: Store, data: dict[str, Any]) -> None:
    """Handle set global data command.

    Async friendly.
    """
    ...

@websocket_api.websocket_command({ vol.Required("type"): "frontend/get_user_data",vol.Optional("key"): str })
@websocket_api.async_response
@with_store
async def websocket_get_user_data(hass: HomeAssistant, connection: ActiveConnection, msg: dict[str, Any], store: Store, data: dict[str, Any]) -> None:
    """Handle get global data command.

    Async friendly.
    """
    ...

