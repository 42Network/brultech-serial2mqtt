"""
This type stub file was generated by pyright.
"""

from __future__ import annotations
from homeassistant.const import ATTR_GPS_ACCURACY, STATE_HOME
from homeassistant.core import HomeAssistant
from homeassistant.helpers.typing import ConfigType
from homeassistant.loader import bind_hass
from .config_entry import ScannerEntity, TrackerEntity, async_setup_entry, async_unload_entry
from .const import ATTR_ATTRIBUTES, ATTR_BATTERY, ATTR_DEV_ID, ATTR_GPS, ATTR_HOST_NAME, ATTR_IP, ATTR_LOCATION_NAME, ATTR_MAC, ATTR_SOURCE_TYPE, CONF_CONSIDER_HOME, CONF_NEW_DEVICE_DEFAULTS, CONF_SCAN_INTERVAL, CONF_TRACK_NEW, CONNECTED_DEVICE_REGISTERED, DEFAULT_CONSIDER_HOME, DEFAULT_TRACK_NEW, DOMAIN, ENTITY_ID_FORMAT, SCAN_INTERVAL, SOURCE_TYPE_BLUETOOTH, SOURCE_TYPE_BLUETOOTH_LE, SOURCE_TYPE_GPS, SOURCE_TYPE_ROUTER, SourceType
from .legacy import AsyncSeeCallback, DeviceScanner, PLATFORM_SCHEMA, PLATFORM_SCHEMA_BASE, SERVICE_SEE, SERVICE_SEE_PAYLOAD_SCHEMA, SOURCE_TYPES, SeeCallback, async_setup_integration as async_setup_legacy_integration, see

"""Provide functionality to keep track of devices."""
@bind_hass
def is_on(hass: HomeAssistant, entity_id: str) -> bool:
    """Return the state if any or a specified device is home."""
    ...

async def async_setup(hass: HomeAssistant, config: ConfigType) -> bool:
    """Set up the device tracker."""
    ...

